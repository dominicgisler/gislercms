{% import "admin/forms.twig" as forms %}

{% extends 'admin/misc/system/_system.twig' %}
{% set tab = 'config' %}

{% set pageSelect = [] %}
{% for page in pages %}
    {% set selected = false %}
    {% if page.getPageId() == config.default_page %}
        {% set selected = true %}
    {% endif %}
    {% set pageSelect = pageSelect|merge([{value: page.getPageId(), label: page.name, selected: selected}]) %}
{% endfor %}

{% set intervals = {
    0: 'Nie'|trans,
    1: 'Jede Stunde'|trans,
    3: 'Alle drei Stunden'|trans,
    6: 'Alle sechs Stunden'|trans,
    12: 'Alle zwölf Stunden'|trans,
    24: 'Jeden Tag'|trans,
    168: 'Jede Woche'|trans,
    720: 'Jeden Monat'|trans
} %}
{% set intvSelect = [] %}
{% set intv2Select = [] %}
{% for key, label in intervals %}
    {% set selected1 = false %}
    {% set selected2 = false %}
    {% if key == config.interval_stats_refresh %}
        {% set selected1 = true %}
    {% endif %}
    {% if key == config.interval_backup %}
        {% set selected2 = true %}
    {% endif %}
    {% set intvSelect = intvSelect|merge([{value: key, label: label, selected: selected1}]) %}
    {% set intv2Select = intv2Select|merge([{value: key, label: label, selected: selected2}]) %}
{% endfor %}

{%
    set messages = {
        invalid_input: {
            class: 'danger',
            message: 'Es sind Fehler aufgetreten, bitte prüfe deine Eingaben.'|trans
        },
        save_error: {
            class: 'danger',
            message: 'Beim Speichern ist ein Fehler aufgetreten, bitte prüfe deine Eingaben oder versuche es später erneut.'|trans
        },
        save_success: {
            class: 'success',
            message: 'Die Konfiguration wurde erfolgreich gespeichert.'|trans
        }
    }
%}

{% block tab %}
    {% if message %}
        <div class="alert alert-{{ messages[message].class }} alert-dismissible fade show" role="alert">
            {{ messages[message].message|raw }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    {% endif %}
    <form method="post" id="page-form">
        {{ forms.form_group('checkbox', 'maintenance_mode', config.maintenance_mode, 'Wartungsmodus'|trans, '', 'maintenance_mode' in errors ? 'is-invalid' : '', 'Im Wartungsmodus wird eine statische Seite angezeigt.'|trans) }}
        {{ forms.form_group('checkbox', 'enable_tracking', config.enable_tracking, 'Statistiken'|trans, '', 'enable_tracking' in errors ? 'is-invalid' : '', 'Seitenbesuche werden aufgezeichnet und in Statistiken auf dem Dashboard zusammengefasst'|trans) }}
        {{ forms.form_group('select', 'default_page', config.default_page, 'Startseite'|trans, '', 'default_page' in errors ? 'is-invalid' : '', 'Startseite deiner Webseite'|trans, pageSelect) }}
        {{ forms.form_group('text', 'admin_route', config.admin_route, 'Admin-Pfad'|trans, '', 'admin_route' in errors ? 'is-invalid' : '', 'Pfad des Adminbereichs'|trans) }}
        {{ forms.form_group('number', 'max_failed_logins', config.max_failed_logins, 'Login Fehlversuche'|trans, '', 'max_failed_logins' in errors ? 'is-invalid' : '', 'Maximale Anzahl Fehlversuche bevor ein Benutzer gesperrt wird'|trans) }}
        <h2 class="h4 mt-4">{{ 'Automatische Aufgaben'|trans }}</h2>
        <div class="alert alert-info fade show" role="alert">
            {{ 'Damit diese Einstellungen funktionieren muss folgender Cronjob auf dem System aktiv sein:'|trans }}<br>
            <code>php {{ docroot }}/index.php /cron POST</code>
        </div>
        {{ forms.form_group('select', 'interval_stats_refresh', config.interval_stats_refresh, 'Aktualisierung der Statistiken'|trans, '', 'interval_stats_refresh' in errors ? 'is-invalid' : '', 'In welchen Zeitabständen die Statistiken automatisch aktualisiert werden'|trans, intvSelect) }}
        {{ forms.form_group('select', 'interval_backup', config.interval_backup, 'Erstellung von Backups'|trans, '', 'interval_backup' in errors ? 'is-invalid' : '', 'In welchen Zeitabständen automatische Backups erstellt werden'|trans, intv2Select) }}
        {{ forms.form_group('number', 'backup_count', config.backup_count, 'Maximale Anzahl Backups'|trans, '', 'backup_count' in errors ? 'is-invalid' : '', 'Wie viele Backups maximal gespeichert werden sollen, die ältesten Backups werden automatisch gelöscht'|trans) }}
        <div class="text-end mb-4">
            <button class="btn btn-primary" name="save">{{ 'Speichern'|trans }}</button>
        </div>
    </form>
{% endblock %}